@model CheckoutPaymentInfoModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-payment-info-page");
}
<div class="page checkout-page payment-info-page mt-5">
    @*@await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Payment })*@
    @await Html.PartialAsync("_Checkout.Navigation")

    <div class="page-body checkout-data">

        <div class="container">
            <div class="row">
                <div class="col-lg-8">
                    <div class="card rounded-0">
                        <div class="card-body">
                            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutPaymentInfoTop })
                            <div class="section payment-info">
                                <div class="row">
                                    <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                                        <form asp-route="CheckoutPaymentInfo" method="post">
                                            <div asp-validation-summary="ModelOnly" class="message-error"></div>
                                            <div class="info">
                                                @await Component.InvokeAsync(Model.PaymentViewComponentName)
                                            </div>
                                            <div class="buttons">
                                                <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn btn-success rounded-0 shadow-sm btn-sm payment-info-next-step-button" />
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutPaymentInfoBottom })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="card border-0 rounded-0 shadow-sm">
                        <div class="card-body">
                            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryTotals })
                            @await Component.InvokeAsync("OrderTotals", new { isEditable = false })
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>
</div>
